<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.armsmart.jupiter.bs.api.dao.PushInfoMapper">

	<resultMap id="baseResultMap" type="com.armsmart.jupiter.bs.api.entity.PushInfo">
        <result property="id" jdbcType="INTEGER" column="id"/>
        <result property="userId" jdbcType="INTEGER" column="user_id"/>
        <result property="mobile" jdbcType="VARCHAR" column="mobile"/>
        <result property="platform" jdbcType="INTEGER" column="platform"/>
        <result property="registrationId" jdbcType="VARCHAR" column="registration_id"/>
        <result property="pushType" jdbcType="INTEGER" column="push_type"/>
        <result property="pushInfo" jdbcType="VARCHAR" column="push_info"/>
        <result property="extras" jdbcType="VARCHAR" column="extras"/>
        <result property="sendno" jdbcType="INTEGER" column="sendno"/>
        <result property="msgId" jdbcType="VARCHAR" column="msg_id"/>
        <result property="isRead" jdbcType="BIT" column="is_read"/>
        <result property="createTime" jdbcType="BIGINT" column="create_time"/>
        <result property="updateTime" jdbcType="BIGINT" column="update_time"/>
        <result property="readTime" jdbcType="BIGINT" column="read_time"/>
        <result property="isDel" jdbcType="BIT" column="is_del"/>
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		id,user_id,mobile,platform,registration_id,push_type,push_info,extras,sendno,msg_id,is_read,create_time,update_time,read_time,is_del
	    ]]>
	</sql>
	<!-- 插入数据 -->
	<insert id="insert" parameterType="com.armsmart.jupiter.bs.api.entity.PushInfo" useGeneratedKeys="true" keyProperty="id">
		insert into push_info
		(user_id,mobile,platform,registration_id,push_type,push_info,extras,sendno,msg_id,is_read,create_time,update_time,read_time,is_del)
		values (
		#{userId,jdbcType=INTEGER},
		#{mobile,jdbcType=VARCHAR},
		#{platform,jdbcType=INTEGER},
		#{registrationId,jdbcType=VARCHAR},
		#{pushType,jdbcType=INTEGER},
		#{pushInfo,jdbcType=VARCHAR},
		#{extras,jdbcType=VARCHAR},
		#{sendno,jdbcType=INTEGER},
		#{msgId,jdbcType=VARCHAR},
		#{isRead,jdbcType=BIT},
		#{createTime,jdbcType=BIGINT},
		#{updateTime,jdbcType=BIGINT},
		#{readTime,jdbcType=BIGINT},
		#{isDel,jdbcType=BIT}
		)
	</insert>
	<!-- 更新数据 包含null-->
	<update id="update" parameterType="com.armsmart.jupiter.bs.api.entity.PushInfo" >
		update push_info
		<set>
			user_id = #{userId,jdbcType=INTEGER},
			mobile = #{mobile,jdbcType=VARCHAR},
			platform = #{platform,jdbcType=INTEGER},
			registration_id = #{registrationId,jdbcType=VARCHAR},
			push_type = #{pushType,jdbcType=INTEGER},
			push_info = #{pushInfo,jdbcType=VARCHAR},
			extras = #{extras,jdbcType=VARCHAR},
			sendno = #{sendno,jdbcType=INTEGER},
			msg_id = #{msgId,jdbcType=VARCHAR},
			is_read = #{isRead,jdbcType=BIT},
			create_time = #{createTime,jdbcType=BIGINT},
			update_time = #{updateTime,jdbcType=BIGINT},
			read_time = #{readTime,jdbcType=BIGINT},
			is_del = #{isDel,jdbcType=BIT}
		</set>
		WHERE id = #{id}
	</update>
	<!-- 更新数据，不包含null -->
	<update id="updateSelective" parameterType="com.armsmart.jupiter.bs.api.entity.PushInfo" >
		update push_info
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="mobile != null">
				mobile = #{mobile,jdbcType=VARCHAR},
			</if>
			<if test="platform != null">
				platform = #{platform,jdbcType=INTEGER},
			</if>
			<if test="registrationId != null">
				registration_id = #{registrationId,jdbcType=VARCHAR},
			</if>
			<if test="pushType != null">
				push_type = #{pushType,jdbcType=INTEGER},
			</if>
			<if test="pushInfo != null">
				push_info = #{pushInfo,jdbcType=VARCHAR},
			</if>
			<if test="extras != null">
				extras = #{extras,jdbcType=VARCHAR},
			</if>
			<if test="sendno != null">
				sendno = #{sendno,jdbcType=INTEGER},
			</if>
			<if test="msgId != null">
				msg_id = #{msgId,jdbcType=VARCHAR},
			</if>
			<if test="isRead != null">
				is_read = #{isRead,jdbcType=BIT},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=BIGINT},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=BIGINT},
			</if>
			<if test="readTime != null">
				read_time = #{readTime,jdbcType=BIGINT},
			</if>
			<if test="isDel != null">
				is_del = #{isDel,jdbcType=BIT}
			</if>
		</set>
		WHERE id = #{id}
	</update>

	<!-- 主键条件查询 -->
	<select id="selectById" resultMap="baseResultMap">
		select
		<include refid="columns"/>
		from push_info
		WHERE id = #{id}
	</select>

	<select id="getPushInfo" resultMap="baseResultMap">
		select
		<include refid="columns"/>
		from push_info
		where user_id = #{userId}
		and is_del = 0
		and is_read = 0
		order by create_time desc
		limit 1
	</select>

	<select id="selectPushInfo" resultMap="baseResultMap">
		select
		<include refid="columns"/>
		from push_info
		where user_id = #{userId}
		and is_del = 0
		and is_read = 1
		order by create_time desc
		limit 1
	</select>
	<!-- 列表条件查询count -->
	<select id="selectList_COUNT" resultType="java.lang.Long">
		select count(*)
		from push_info
		<include refid="whereSql"/>
	</select>

	<!-- 列表条件查询 -->
	<select id="selectList" resultMap="baseResultMap">
		select
		<include refid="columns"/>
		from push_info
		<include refid="whereSql"/>
		<include refid="orderSql"/>
	</select>
    
    <sql id="whereSql">
		<where>
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="userId != null">
				and user_id = #{userId}
			</if>
			<if test="mobile != null and mobile != ''">
				and mobile = #{mobile}
			</if>
			<if test="platform != null">
				and platform = #{platform}
			</if>
			<if test="registrationId != null and registrationId != ''">
				and registration_id = #{registrationId}
			</if>
			<if test="pushType != null">
				and push_type = #{pushType}
			</if>
			<if test="pushInfo != null and pushInfo != ''">
				and push_info = #{pushInfo}
			</if>
			<if test="extras != null and extras != ''">
				and extras = #{extras}
			</if>
			<if test="sendno != null">
				and sendno = #{sendno}
			</if>
			<if test="msgId != null and msgId != ''">
				and msg_id = #{msgId}
			</if>
			<if test="isRead != null">
				and is_read = #{isRead}
			</if>
			<if test="createTime != null">
				and create_time = #{createTime}
			</if>
			<if test="updateTime != null">
				and update_time = #{updateTime}
			</if>
			<if test="readTime != null">
				and read_time = #{readTime}
			</if>
			<if test="isDel != null">
				and is_del = #{isDel}
			</if>
		</where>
	</sql>
    <sql id="orderSql">
    	<choose>
			<when test="orderBy != null and orderBy != ''">
				order by 
		    	<if test="orderBy == 'id'">
				id ${orderSort}
				</if>
		    	<if test="orderBy == 'userId'">
				user_id ${orderSort}
				</if>
		    	<if test="orderBy == 'mobile'">
				mobile ${orderSort}
				</if>
		    	<if test="orderBy == 'platform'">
				platform ${orderSort}
				</if>
		    	<if test="orderBy == 'registrationId'">
				registration_id ${orderSort}
				</if>
		    	<if test="orderBy == 'pushType'">
				push_type ${orderSort}
				</if>
		    	<if test="orderBy == 'pushInfo'">
				push_info ${orderSort}
				</if>
		    	<if test="orderBy == 'extras'">
				extras ${orderSort}
				</if>
		    	<if test="orderBy == 'sendno'">
				sendno ${orderSort}
				</if>
		    	<if test="orderBy == 'msgId'">
				msg_id ${orderSort}
				</if>
		    	<if test="orderBy == 'isRead'">
				is_read ${orderSort}
				</if>
		    	<if test="orderBy == 'createTime'">
				create_time ${orderSort}
				</if>
		    	<if test="orderBy == 'updateTime'">
				update_time ${orderSort}
				</if>
		    	<if test="orderBy == 'readTime'">
				read_time ${orderSort}
				</if>
		    	<if test="orderBy == 'isDel'">
				is_del ${orderSort}
				</if>
			</when>
			<otherwise>
				order by create_time desc
			</otherwise>
		</choose>
    </sql>
</mapper>

