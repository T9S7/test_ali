<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.armsmart.jupiter.bs.api.dao.AccountInfoMapper">

	<resultMap id="baseResultMap" type="com.armsmart.jupiter.bs.api.entity.AccountInfo">
        <result property="accountId" jdbcType="INTEGER" column="account_id"/>
        <result property="userId" jdbcType="INTEGER" column="user_id"/>
        <result property="balance" jdbcType="BIGINT" column="balance"/>
        <result property="frozenCapital" jdbcType="BIGINT" column="frozen_capital"/>
        <result property="cashDeposit" jdbcType="BIGINT" column="cash_deposit"/>
        <result property="createTime" jdbcType="BIGINT" column="create_time"/>
        <result property="updateTime" jdbcType="BIGINT" column="update_time"/>
        <result property="isDel" jdbcType="BIT" column="is_del"/>
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		account_id,user_id,balance,frozen_capital,cash_deposit,create_time,update_time,is_del
	    ]]>
	</sql>
	<!-- 插入数据 -->
	<insert id="insert" parameterType="com.armsmart.jupiter.bs.api.entity.AccountInfo" useGeneratedKeys="true" keyProperty="accountId">
		insert into account_info
		(user_id,balance,frozen_capital,cash_deposit,create_time,update_time,is_del)
		values (
		#{userId,jdbcType=INTEGER},
		#{balance,jdbcType=BIGINT},
		#{frozenCapital,jdbcType=BIGINT},
		#{cashDeposit,jdbcType=BIGINT},
		#{createTime,jdbcType=BIGINT},
		#{updateTime,jdbcType=BIGINT},
		#{isDel,jdbcType=BIT}
		)
	</insert>
	<!-- 更新数据 包含null-->
	<update id="update" parameterType="com.armsmart.jupiter.bs.api.entity.AccountInfo" >
		update account_info
		<set>
			user_id = #{userId,jdbcType=INTEGER},
			balance = #{balance,jdbcType=BIGINT},
			frozen_capital = #{frozenCapital,jdbcType=BIGINT},
			cash_deposit = #{cashDeposit,jdbcType=BIGINT},
			create_time = #{createTime,jdbcType=BIGINT},
			update_time = #{updateTime,jdbcType=BIGINT},
			is_del = #{isDel,jdbcType=BIT}
		</set>
		WHERE account_id = #{accountId}
	</update>
	<!-- 更新数据，不包含null -->
	<update id="updateSelective" parameterType="com.armsmart.jupiter.bs.api.entity.AccountInfo" >
		update account_info
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="balance != null">
				balance = #{balance,jdbcType=BIGINT},
			</if>
			<if test="frozenCapital != null">
				frozen_capital = #{frozenCapital,jdbcType=BIGINT},
			</if>
			<if test="cashDeposit != null">
				cash_deposit = #{cashDeposit,jdbcType=BIGINT},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=BIGINT},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=BIGINT},
			</if>
			<if test="isDel != null">
				is_del = #{isDel,jdbcType=BIT}
			</if>
		</set>
		WHERE account_id = #{accountId}
	</update>

	<!-- 主键条件查询 -->
	<select id="selectById" resultMap="baseResultMap">
		select
		<include refid="columns"/>
		from account_info
		WHERE account_id = #{accountId}
	</select>

	<!-- 用户id查询 -->
	<select id="selectByUserId" resultMap="baseResultMap">
		select
		<include refid="columns"/>
		from account_info
		WHERE user_id = #{userId}
	</select>
	<!-- 列表条件查询count -->
	<select id="selectList_COUNT" resultType="java.lang.Long">
		select count(*)
		from account_info
		<include refid="whereSql"/>
	</select>

	<!-- 列表条件查询 -->
	<select id="selectList" resultMap="baseResultMap">
		select
		<include refid="columns"/>
		from account_info
		<include refid="whereSql"/>
		<include refid="orderSql"/>
	</select>
    
    <sql id="whereSql">
		<where>
			<if test="accountId != null">
				and account_id = #{accountId}
			</if>
			<if test="userId != null">
				and user_id = #{userId}
			</if>
			<if test="balance != null">
				and balance = #{balance}
			</if>
			<if test="frozenCapital != null">
				and frozen_capital = #{frozenCapital}
			</if>
			<if test="cashDeposit != null">
				and cash_deposit = #{cashDeposit}
			</if>
			<if test="createTime != null">
				and create_time = #{createTime}
			</if>
			<if test="updateTime != null">
				and update_time = #{updateTime}
			</if>
			<if test="isDel != null">
				and is_del = #{isDel}
			</if>
		</where>
	</sql>
    <sql id="orderSql">
    	<choose>
			<when test="orderBy != null and orderBy != ''">
				order by 
		    	<if test="orderBy == 'accountId'">
				account_id ${orderSort}
				</if>
		    	<if test="orderBy == 'userId'">
				user_id ${orderSort}
				</if>
		    	<if test="orderBy == 'balance'">
				balance ${orderSort}
				</if>
		    	<if test="orderBy == 'frozenCapital'">
				frozen_capital ${orderSort}
				</if>
		    	<if test="orderBy == 'cashDeposit'">
				cash_deposit ${orderSort}
				</if>
		    	<if test="orderBy == 'createTime'">
				create_time ${orderSort}
				</if>
		    	<if test="orderBy == 'updateTime'">
				update_time ${orderSort}
				</if>
		    	<if test="orderBy == 'isDel'">
				is_del ${orderSort}
				</if>
			</when>
			<otherwise>
				order by create_time desc
			</otherwise>
		</choose>
    </sql>
</mapper>

