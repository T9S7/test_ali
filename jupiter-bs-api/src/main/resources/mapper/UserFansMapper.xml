<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.armsmart.jupiter.bs.api.dao.UserFansMapper">

	<resultMap id="baseResultMap" type="com.armsmart.jupiter.bs.api.entity.UserFans">
        <result property="id" jdbcType="BIGINT" column="id"/>
        <result property="userId" jdbcType="BIGINT" column="user_id"/>
        <result property="focusUserId" jdbcType="BIGINT" column="focus_user_id"/>
        <result property="focusState" jdbcType="INTEGER" column="focus_state"/>
        <result property="createTime" jdbcType="BIGINT" column="create_time"/>
        <result property="updateTime" jdbcType="BIGINT" column="update_time"/>
        <result property="isDel" jdbcType="BIT" column="is_del"/>
	</resultMap>

	<!--<resultMap id="countMap" type="com.armsmart.jupiter.bs.api.dto.response.UserFansCountDetail">-->
		<!--<result property="userId" javaType="BIGINT" column="user_id"-->
	<!--</resultMap>-->
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		id,user_id,focus_user_id,focus_state,create_time,update_time,is_del
	    ]]>
	</sql>
	<!-- 插入数据 -->
	<insert id="insert" parameterType="com.armsmart.jupiter.bs.api.entity.UserFans" useGeneratedKeys="true" keyProperty="id">
		insert into user_fans
		(user_id,focus_user_id,focus_state,create_time,update_time,is_del)
		values (
		#{userId,jdbcType=BIGINT},
		#{focusUserId,jdbcType=BIGINT},
		#{focusState,jdbcType=INTEGER},
		#{createTime,jdbcType=BIGINT},
		#{updateTime,jdbcType=BIGINT},
		#{isDel,jdbcType=BIT}
		)
	</insert>
	<!-- 更新数据 包含null-->
	<update id="update" parameterType="com.armsmart.jupiter.bs.api.entity.UserFans" >
		update user_fans
		<set>
			user_id = #{userId,jdbcType=BIGINT},
			focus_user_id = #{focusUserId,jdbcType=BIGINT},
			focus_state = #{focusState,jdbcType=INTEGER},
			create_time = #{createTime,jdbcType=BIGINT},
			update_time = #{updateTime,jdbcType=BIGINT},
			is_del = #{isDel,jdbcType=BIT}
		</set>
		WHERE id = #{id}
	</update>
	<!-- 更新数据，不包含null -->
	<update id="updateSelective" parameterType="com.armsmart.jupiter.bs.api.entity.UserFans" >
		update user_fans
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=BIGINT},
			</if>
			<if test="focusUserId != null">
				focus_user_id = #{focusUserId,jdbcType=BIGINT},
			</if>
			<if test="focusState != null">
				focus_state = #{focusState,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=BIGINT},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=BIGINT},
			</if>
			<if test="isDel != null">
				is_del = #{isDel,jdbcType=BIT}
			</if>
		</set>
		WHERE id = #{id}
	</update>

	<!-- 主键条件查询 -->
	<select id="selectById" resultMap="baseResultMap">
		select
		<include refid="columns"/>
		from user_fans
		WHERE id = #{id}
	</select>

	<!-- 列表条件查询count -->
	<select id="selectList_COUNT" resultType="java.lang.Long">
		select count(*)
		from user_fans
		<include refid="whereSql"/>
	</select>

	<!-- 列表条件查询 -->
	<select id="selectList" resultMap="baseResultMap">
		select
		<include refid="columns"/>
		from user_fans
		<include refid="whereSql"/>
		<include refid="orderSql"/>
	</select>

	<select id="selectCount" resultType="com.armsmart.jupiter.bs.api.dto.response.UserFansCountDetail">
		SELECT t.user_id,
		   sum(case when t.is_del= 0 then 1 else 0 END ) focus_count,
		   t1.fans_count
		  FROM user_fans t
		  LEFT JOIN(
		SELECT DISTINCT focus_user_id, count(1) fans_count
		  FROM user_fans
		 where is_del= 0
		 GROUP BY focus_user_id) t1 ON t.user_id= t1.focus_user_id
		 WHERE t.user_id= #{userId}
		 GROUP BY t.user_id,
				 t1.fans_count
	</select>

	<select id="exiesUserId" resultType="java.lang.Integer">
		select count(1) from user_fans
			where is_del =0
				and user_id = #{focusUserId}
				and focus_user_id = #{userId}
	</select>


	<update id="changeState" parameterType="com.armsmart.jupiter.bs.api.dto.request.UserFansAddParam">
		update user_fans set focus_state = 2
			where is_del =0
				and user_id = #{focusUserId}
				and focus_user_id = #{userId}
	</update>

	<update id="returnState" parameterType="com.armsmart.jupiter.bs.api.dto.request.UserFansAddParam">
		update user_fans set focus_state = 1
			where is_del =0
				and user_id = #{focusUserId}
				and focus_user_id = #{userId}
	</update>


	<select id="selectFocusList" resultType="com.armsmart.jupiter.bs.api.dto.response.UserFansListDetail">
			SELECT
				t.id,
				t.user_id,
			    t1.id as otherUserId,
				t1.nickname,
				t1.avatar,
				t.focus_state as focusType,
				t.create_time as focusTime
			FROM
				`user_fans` t
			LEFT JOIN user_info t1 ON (
				t.focus_user_id = t1.id
				AND t1.is_del = 0
			)
			WHERE
				t.is_del = 0
			AND t.user_id = #{userId}
			order by t.create_time desc
	</select>

	<select id="selectFansList" resultType="com.armsmart.jupiter.bs.api.dto.response.UserFansListDetail">
		SELECT
			t.id,
			t.focus_user_id as userId,
			t.user_id  as otherUserId,
			t1.nickname,
			t1.avatar,
			t.focus_state as focusType,
			t.create_time as focusTime
		FROM
			`user_fans` t
		LEFT JOIN user_info t1 ON (
			t.user_id = t1.id
			AND t1.is_del = 0
		)
		WHERE
			t.is_del = 0
		AND t.focus_user_id = #{userId}
		order by t.create_time desc
	</select>

	<select id="selectFans"  resultMap="baseResultMap">
		select * from user_fans
		where user_id = #{userId}
		and focus_user_id = #{focusUserId}
		and is_del = 0
	</select>

	<sql id="whereSql">
		<where>
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="userId != null">
				and user_id = #{userId}
			</if>
			<if test="focusUserId != null">
				and focus_user_id = #{focusUserId}
			</if>
			<if test="focusState != null">
				and focus_state = #{focusState}
			</if>
			<if test="createTime != null">
				and create_time = #{createTime}
			</if>
			<if test="updateTime != null">
				and update_time = #{updateTime}
			</if>
			<if test="isDel != null">
				and is_del = #{isDel}
			</if>
		</where>
	</sql>
    <sql id="orderSql">
    	<choose>
			<when test="orderBy != null and orderBy != ''">
				order by 
		    	<if test="orderBy == 'id'">
				id ${orderSort}
				</if>
		    	<if test="orderBy == 'userId'">
				user_id ${orderSort}
				</if>
		    	<if test="orderBy == 'focusUserId'">
				focus_user_id ${orderSort}
				</if>
		    	<if test="orderBy == 'focusState'">
				focus_state ${orderSort}
				</if>
		    	<if test="orderBy == 'createTime'">
				create_time ${orderSort}
				</if>
		    	<if test="orderBy == 'updateTime'">
				update_time ${orderSort}
				</if>
		    	<if test="orderBy == 'isDel'">
				is_del ${orderSort}
				</if>
			</when>
			<otherwise>
				order by create_time desc
			</otherwise>
		</choose>
    </sql>
</mapper>

