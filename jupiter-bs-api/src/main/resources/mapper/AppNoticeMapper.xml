<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.armsmart.jupiter.bs.api.dao.AppNoticeMapper">

    <resultMap id="baseResultMap" type="com.armsmart.jupiter.bs.api.entity.AppNotice">
        <result property="id" jdbcType="INTEGER" column="id"/>
        <result property="title" jdbcType="VARCHAR" column="title"/>
        <result property="content" jdbcType="LONGVARCHAR" column="content"/>
        <result property="sign" jdbcType="VARCHAR" column="sign"/>
        <result property="category" jdbcType="INTEGER" column="category"/>
        <result property="enabled" jdbcType="BIT" column="enabled"/>
        <result property="createTime" jdbcType="BIGINT" column="create_time"/>
        <result property="updateTime" jdbcType="BIGINT" column="update_time"/>
        <result property="isDel" jdbcType="BIT" column="is_del"/>
    </resultMap>

    <!-- 用于select查询公用抽取的列 -->
    <sql id="columns">
	    <![CDATA[


                        id,title,content,sign,category,enabled,create_time,update_time,is_del


        ]]>
	</sql>
    <!-- 插入数据 -->
    <insert id="insert" parameterType="com.armsmart.jupiter.bs.api.entity.AppNotice" useGeneratedKeys="true"
            keyProperty="id">
		insert into app_notice
		(title,content,sign,category,enabled,create_time,update_time,is_del)
		values (
		#{title,jdbcType=VARCHAR},
		#{content,jdbcType=LONGVARCHAR},
		#{sign,jdbcType=VARCHAR},
		#{category,jdbcType=INTEGER},
		#{enabled,jdbcType=BIT},
		#{createTime,jdbcType=BIGINT},
		#{updateTime,jdbcType=BIGINT},
		#{isDel,jdbcType=BIT}
		)
	</insert>
    <!-- 更新数据 包含null-->
    <update id="update" parameterType="com.armsmart.jupiter.bs.api.entity.AppNotice">
        update app_notice
        <set>
            title = #{title,jdbcType=VARCHAR},
            content = #{content,jdbcType=LONGVARCHAR},
            sign = #{sign,jdbcType=VARCHAR},
            category = #{category,jdbcType=INTEGER},
            enabled = #{enabled,jdbcType=BIT},
            create_time = #{createTime,jdbcType=BIGINT},
            update_time = #{updateTime,jdbcType=BIGINT},
            is_del = #{isDel,jdbcType=BIT}
        </set>
        WHERE id = #{id}
    </update>
    <!-- 更新数据，不包含null -->
    <update id="updateSelective" parameterType="com.armsmart.jupiter.bs.api.entity.AppNotice">
        update app_notice
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
            <if test="sign != null">
                sign = #{sign,jdbcType=VARCHAR},
            </if>
            <if test="category != null">
                category = #{category,jdbcType=INTEGER},
            </if>
            <if test="enabled != null">
                enabled = #{enabled,jdbcType=BIT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=BIGINT},
            </if>
            <if test="isDel != null">
                is_del = #{isDel,jdbcType=BIT}
            </if>
        </set>
        WHERE id = #{id}
    </update>

    <!-- 主键条件查询 -->
    <select id="selectById" resultMap="baseResultMap">
        select
        <include refid="columns"/>
        from app_notice
        WHERE id = #{id}
    </select>

    <!-- 列表条件查询count -->
    <select id="selectList_COUNT" resultType="java.lang.Long">
        select count(*)
        from app_notice
        <include refid="whereSql"/>
    </select>

    <!-- 列表条件查询 -->
    <select id="selectList" resultMap="baseResultMap">
        select
        <include refid="columns"/>
        from app_notice
        <include refid="whereSql"/>
        <include refid="orderSql"/>
    </select>

    <sql id="whereSql">
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="title != null and title != ''">
                and title = #{title}
            </if>
            <if test="content != null">
                and content = #{content}
            </if>
            <if test="sign != null and sign != ''">
                and sign = #{sign}
            </if>
            <if test="category != null">
                and category = #{category}
            </if>
            <if test="enabled != null">
                and enabled = #{enabled}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="isDel != null">
                and is_del = #{isDel}
            </if>
        </where>
    </sql>
    <sql id="orderSql">
        <choose>
            <when test="orderBy != null and orderBy != ''">
                order by
                <if test="orderBy == 'id'">
                    id ${orderSort}
                </if>
                <if test="orderBy == 'title'">
                    title ${orderSort}
                </if>
                <if test="orderBy == 'content'">
                    content ${orderSort}
                </if>
                <if test="orderBy == 'sign'">
                    sign ${orderSort}
                </if>
                <if test="orderBy == 'category'">
                    category ${orderSort}
                </if>
                <if test="orderBy == 'enabled'">
                    enabled ${orderSort}
                </if>
                <if test="orderBy == 'createTime'">
                    create_time ${orderSort}
                </if>
                <if test="orderBy == 'updateTime'">
                    update_time ${orderSort}
                </if>
                <if test="orderBy == 'isDel'">
                    is_del ${orderSort}
                </if>
            </when>
            <otherwise>
                order by create_time desc
            </otherwise>
        </choose>
    </sql>

    <update id="resetEnabled">
		update app_notice set enabled = 0 where enabled = 1
	</update>
</mapper>

